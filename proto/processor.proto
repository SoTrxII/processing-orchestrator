syntax = "proto3";

option go_package = "./processing-orchestrator";
package processing_orchestrator;


message WatchRequest {
  string id = 1;
}


message ProcessingStatus {
  string id = 1;
  string error = 2;
  repeated string stepsList = 3;
  uint32 currentStepIndex = 4;
  repeated string itemList = 5;
  uint32 currentItemIndex = 6;
  // All processing is done
  bool done = 7;
  // Progress as a user friendly string
  string progress = 8;
  // Final video link, only available when done is true
  string link = 9;
}

message ProcessRequest {
  repeated string discordAudioKeys = 1;
  string backgroundAudioKey = 2;
}

message ProcessResponse {
  string id = 1;
}

enum Visibility {
  PRIVATE = 0;
  UNLISTED = 1;
  PUBLIC = 2;
  UNKNOWN = 3;
}
message UpdateRequest {
  string id = 1;
  string vidTitle = 2;
  string vidDesc = 3;
  Visibility vidVisibility = 4;
  string playlistId = 5;
}

message UpdateResponse {
  string id = 1;
}

service Processor {
  rpc Start(ProcessRequest) returns (ProcessResponse) ;
  rpc Watch(WatchRequest) returns (stream ProcessingStatus) ;
  rpc UpdateInfo(UpdateRequest) returns (UpdateResponse);
}